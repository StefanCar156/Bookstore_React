{"version":3,"sources":["context.js","components/Book.js","components/Books.js","components/Sidebar.js","components/BooksContainer.js","components/Navbar.js","components/CartItem.js","components/Cart.js","components/BookDetails.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","books","setBooks","cartItems","setCartItems","isCartOpen","setIsCartOpen","total","setTotal","amount","setAmount","categoryFilters","setCategoryFilters","searchValue","setSearchValue","bookId","setBookId","useEffect","updatedAmount","map","item","cartItemAmount","getTotalAmount","newTotal","cartItemPrice","replace","toFixed","getTotal","Provider","value","handleChangeCategory","e","target","textContent","handleAddItemToCart","id","newCartItemTitle","newCartItemPrice","booksList","book","title","price","isSameItem","cartItemTitle","alert","newCartItem","handleToggleCart","handleRemoveCartItem","filter","indexOf","increaseAmount","i","length","newCartItemAmount","updatedCartItem","newCartItems","decreaseAmount","handleConfirmOrder","handleSearchValue","useGlobalContext","useContext","Book","cover","className","to","onClick","src","alt","Books","Array","isArray","category","toLowerCase","includes","author","Sidebar","categories","push","uniqueCategories","Set","sort","BooksContainer","fetchData","a","fetch","headers","response","json","fetchedBooks","console","log","Navbar","isSearchOpen","setIsSearchOpen","type","onChange","placeholder","style","backgroundColor","CartItem","Cart","BookDetails","readMore","setReadMore","currentBook","setCurrentBook","isBookLoading","setIsBookLoading","fetchBook","then","data","description","substring","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bf63489.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [books, setBooks] = useState({})\r\n    const [cartItems, setCartItems] = useState([])\r\n    const [isCartOpen, setIsCartOpen] = useState(false)\r\n    const [total, setTotal] = useState(0)\r\n    const [amount, setAmount] = useState(0)\r\n    const [categoryFilters, setCategoryFilters] = useState(null)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [bookId, setBookId] = useState(null)\r\n\r\n    const handleToggleCart = () => {\r\n        setIsCartOpen(!isCartOpen)\r\n    }\r\n\r\n    const handleSearchValue = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        if (e.target.textContent === \"All Categories\") {\r\n            setCategoryFilters(null)\r\n        } else {\r\n            setCategoryFilters(e.target.textContent)\r\n        }\r\n    }\r\n\r\n    const handleAddItemToCart = (id) => {\r\n        let newCartItemTitle, newCartItemPrice\r\n        books.booksList.map((book) => {\r\n            if (book.id === id) {\r\n                newCartItemTitle = book.title\r\n                newCartItemPrice = book.price\r\n            }\r\n        })\r\n        // Check if item is already in the cart\r\n        let isSameItem = false\r\n        cartItems.map((item) => {\r\n            if (item.cartItemTitle === newCartItemTitle) {\r\n                alert(\"Item is already in the cart!\")\r\n                isSameItem = true\r\n            }\r\n        })\r\n        if (isSameItem) {\r\n            return\r\n        }\r\n        const newCartItem = {\r\n            cartItemTitle: newCartItemTitle,\r\n            cartItemPrice: newCartItemPrice,\r\n            cartItemAmount: 1\r\n        }\r\n        setCartItems([...cartItems, newCartItem])\r\n    }\r\n\r\n    const handleRemoveCartItem = (id) => {\r\n        setCartItems(cartItems.filter((item) => cartItems.indexOf(item) !== id))\r\n    }\r\n\r\n    const increaseAmount = (id) => {\r\n        for (let i = 0; i < cartItems.length; i++) {\r\n            if (i === id) {\r\n                let newCartItemAmount = cartItems[i].cartItemAmount + 1\r\n                let updatedCartItem = {...cartItems[i], cartItemAmount: newCartItemAmount}\r\n                let newCartItems = cartItems\r\n                newCartItems[i] = updatedCartItem\r\n                setCartItems([...newCartItems])\r\n            }\r\n        }\r\n    }\r\n    const decreaseAmount = (id) => {\r\n        for (let i = 0; i < cartItems.length; i++) {\r\n            if (i === id) {\r\n                let newCartItemAmount = cartItems[i].cartItemAmount - 1\r\n                // Prevent amounts less than 1\r\n                if (newCartItemAmount < 1) {\r\n                    newCartItemAmount = 1\r\n                } \r\n                let updatedCartItem = {...cartItems[i], cartItemAmount: newCartItemAmount}\r\n                let newCartItems = cartItems\r\n                newCartItems[i] = updatedCartItem\r\n                setCartItems([...newCartItems])\r\n            }\r\n        }\r\n    }\r\n\r\n    const getTotalAmount = () => {\r\n        let updatedAmount = 0\r\n        cartItems.map((item) => {\r\n            updatedAmount += item.cartItemAmount\r\n        })\r\n        setAmount(updatedAmount)\r\n    }\r\n\r\n    const getTotal = () => {\r\n        let newTotal = 0\r\n        cartItems.map((item) => {\r\n            newTotal += item.cartItemPrice.replace('$', '') * item.cartItemAmount\r\n        })\r\n        setTotal(newTotal.toFixed(2))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTotalAmount()\r\n        getTotal()\r\n    }, [cartItems])\r\n\r\n    const handleConfirmOrder = () => {\r\n        alert(`Your order of $${total} is confirmed`)\r\n        setCartItems([])\r\n    }\r\n\r\n    return <AppContext.Provider value={{loading, setLoading, books, setBooks, categoryFilters, handleChangeCategory, handleAddItemToCart, cartItems, handleToggleCart, isCartOpen, handleRemoveCartItem, amount, total, increaseAmount, decreaseAmount, handleConfirmOrder, searchValue, setSearchValue, handleSearchValue, bookId, setBookId}}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Book = ({id, title, cover, price}) => {\r\n  const { handleAddItemToCart, setBookId } = useGlobalContext()\r\n\r\n  return <article className=\"book\">\r\n            <div className=\"cover-container\">\r\n              <div className=\"cover-overlay\"></div>\r\n              <Link to=\"/book\">\r\n                <button className=\"details-btn\" onClick={() => {setBookId(id)}}>View details</button>\r\n              </Link>\r\n              <img src={cover} alt={title} className=\"book-cover\" />\r\n            </div>\r\n            <div className=\"book-info\">\r\n              <h2 className=\"book-title\">{title}</h2>\r\n              <h4 className=\"book-price\">${price}</h4>\r\n              <button className=\"add-to-cart-btn\" onClick={() => handleAddItemToCart(id)}>Add to cart</button>\r\n            </div>\r\n        </article>\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport Book from './Book'\r\nconst Books = ({books, loading}) => {\r\n    const { categoryFilters, searchValue } = useGlobalContext()\r\n    // Check if, after loading is done, fetched data returned an array\r\n    if (!loading && Array.isArray(books.booksList)) {\r\n        return (\r\n            <div className=\"book-list\">\r\n                {\r\n                    books.booksList.map((book) => {\r\n                        // If user does not enter search value\r\n                        if (searchValue === \"\") {\r\n                            if (categoryFilters === null) {\r\n                                return <Book key={book.id}  {...book} />\r\n                            }\r\n                            else if (book.category === categoryFilters) {\r\n                                return <Book key={book.id}  {...book} />\r\n                            }\r\n                        } else {\r\n                            // If user enters some search value, but does not select category\r\n                            if (categoryFilters === null) {\r\n                                if ((book.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                                book.author.toLowerCase().includes(searchValue.toLowerCase()))) {\r\n                                    return <Book key={book.id}  {...book} />\r\n                                }\r\n                            } else {\r\n                                // If user enters search value AND selects category\r\n                                if ((book.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                                book.author.toLowerCase().includes(searchValue.toLowerCase())) && book.category === categoryFilters) {\r\n                                    return <Book key={book.id}  {...book} />\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    return <h1 className=\"no-books-notification\">No books available.</h1>\r\n  \r\n}\r\n\r\nexport default Books;\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst Sidebar = () => {\r\n    const { books, handleChangeCategory, categoryFilters } = useGlobalContext()\r\n    let categories = []\r\n    if (Array.isArray(books.booksList)) {\r\n        books.booksList.map((book) => {\r\n            categories.push(book.category)\r\n        })\r\n    }\r\n    let uniqueCategories = [...new Set(categories)]\r\n\r\n    return (\r\n        <aside className=\"sidebar\">\r\n            <ul className=\"categories-list\">\r\n                <li className=\"category-item\" onClick={(e) => handleChangeCategory(e)}>All Categories</li>\r\n                {\r\n                    uniqueCategories.sort().map((category, i) => {\r\n                        return <li key={i} className={`category-item ${categoryFilters === category && `category-item-active`}`} onClick={(e) => handleChangeCategory(e)}>{category}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </aside>\r\n    )\r\n}\r\nexport default Sidebar","import React, { useEffect } from 'react'\r\nimport Books from './Books'\r\nimport Sidebar from './Sidebar'\r\nimport { useGlobalContext } from '../context';\r\n\r\nconst BooksContainer = () => {\r\n    const { loading, setLoading, books, setBooks } = useGlobalContext()\r\n    \r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n    \r\n        try {\r\n          const response = await fetch('database.json'\r\n          ,{\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n          })\r\n          const fetchedBooks = await response.json()\r\n          setLoading(false)\r\n          setBooks(fetchedBooks)\r\n        } catch (error) {\r\n          setLoading(false);\r\n          console.log(error);\r\n        }\r\n      }\r\n    \r\n      useEffect(() => {\r\n        fetchData();\r\n      }, []);\r\n    \r\n      if (loading) {\r\n        return (\r\n          <div className=\"books-container\">Loading...</div>\r\n        )\r\n      }\r\n      return (\r\n        <main>\r\n          <Sidebar />\r\n          <div className=\"books-container\">\r\n            <h1>E-books</h1>\r\n          <Books books={books} loading={loading} />\r\n        </div>\r\n        </main>\r\n        \r\n      )\r\n}\r\nexport default BooksContainer\r\n","import React, { useState } from 'react'\r\nimport { FiShoppingCart } from 'react-icons/fi'\r\nimport { BiSearchAlt } from 'react-icons/bi'\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    const { amount, handleToggleCart, searchValue, handleSearchValue } = useGlobalContext()\r\n    const [isSearchOpen, setIsSearchOpen] = useState(false)\r\n    \r\n    return (\r\n        <nav>\r\n            <div className=\"nav-container\">\r\n                <Link to=\"/\">\r\n                    <h1 className=\"logo\">Bookstore</h1>\r\n                </Link>\r\n                <div className=\"nav-btns\">\r\n                    <Link to=\"/\">\r\n                    <div className=\"nav-search\">\r\n                        <input \r\n                        type=\"text\" \r\n                        value={searchValue}\r\n                        onChange={(e) => handleSearchValue(e)}\r\n                        className={`search-input ${isSearchOpen && `search-input-active`}`}\r\n                        placeholder=\"Search...\" />\r\n                        <button className=\"search-btn\" \r\n                        onClick={() => setIsSearchOpen(!isSearchOpen)}\r\n                        style={{backgroundColor: `${isSearchOpen ? `#ec1616` : `#6d6e70`}` }}\r\n                        ><BiSearchAlt /></button>\r\n                    </div>\r\n                    </Link>\r\n                    <button className=\"cart-btn\" onClick={handleToggleCart}><FiShoppingCart /><span>{amount}</span></button>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React from 'react'\r\nimport { TiTimes } from 'react-icons/ti'\r\nimport { MdDelete, MdKeyboardArrowUp, MdKeyboardArrowDown } from 'react-icons/md'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst CartItem = ({item, id}) => {\r\n    const { handleRemoveCartItem, increaseAmount, decreaseAmount } = useGlobalContext()\r\n    return (\r\n        <li className=\"cart-item\">\r\n            <span className=\"cart-item-name\">{item.cartItemTitle}</span>\r\n            <span className=\"cart-item-price\">{item.cartItemPrice}</span>\r\n            <TiTimes />\r\n            <div className=\"item-amount-container\">\r\n                <button className=\"amount-btn\" onClick={() =>  increaseAmount(id)}><MdKeyboardArrowUp /></button>\r\n                <p className=\"amount\">{item.cartItemAmount}</p>\r\n                <button className=\"amount-btn\" onClick={() => decreaseAmount(id)} ><MdKeyboardArrowDown /></button>\r\n            </div>\r\n            <button className=\"remove-cart-item-btn\" onClick={() => handleRemoveCartItem(id)}><MdDelete /></button>\r\n        </li>\r\n    )\r\n}\r\nexport default CartItem","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport CartItem from './CartItem'\r\n\r\nconst Cart = () => {\r\n    const { cartItems, isCartOpen, total, handleConfirmOrder } = useGlobalContext()\r\n\r\n    if (cartItems.length > 0) {\r\n        return (\r\n            <div className={`cart-container ${isCartOpen && `cart-container-open`}`}>\r\n                <ul className=\"cart-items\">\r\n                    {cartItems.map((item, i) => {\r\n                        return <CartItem key={i} item={item} id={i} />\r\n                    })}\r\n                </ul>\r\n                <div className=\"cart-total\">\r\n                    <h1>Total: <span>${total}</span></h1>\r\n                    <button className=\"confirm-order-btn\" onClick={handleConfirmOrder}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={`cart-container ${isCartOpen && `cart-container-open`}`}>\r\n                <p className=\"empty-cart-notification\">Your cart is currently empty</p>\r\n            </div>\r\n    )\r\n    \r\n}\r\nexport default Cart","import React, { useEffect, useState } from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BookDetails = () => {\r\n    const { bookId, handleAddItemToCart, setSearchValue, handleChangeCategory } = useGlobalContext()\r\n    const [readMore, setReadMore] = useState(false)\r\n    const [currentBook, setCurrentBook] = useState({})\r\n    const [isBookLoading, setIsBookLoading] = useState(true)\r\n\r\n    const fetchBook = async () => {\r\n        await fetch(`database.json`)\r\n        .then((response) => response.json())\r\n        .then(data => setCurrentBook(data.booksList.filter((book) => book.id === bookId)[0]))\r\n    }\r\n    useEffect(() => {\r\n        fetchBook()\r\n        setIsBookLoading(false)\r\n    }, [])\r\n    \r\n    if (isBookLoading) {\r\n        return (\r\n            <div className=\"book-details-loading-container\">\r\n                <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        )\r\n    }else {\r\n        const { id, cover, title, author, price, category, description = \"\" } = currentBook\r\n        return (\r\n        <div className=\"book-details-container\">\r\n            <div className=\"book-details-img-container\">\r\n                <img src={cover} alt={title} className=\"book-details-img\" />\r\n                <button className=\"details-add-to-cart-btn\" onClick={() => handleAddItemToCart(id)} >Add to cart</button>\r\n            </div>  \r\n            <div className=\"book-details-info\">\r\n                <h1 className=\"book-details-title\">{title}</h1>\r\n                <h3 className=\"book-details-author\">by <Link to=\"/\"><span onClick={(e) => setSearchValue(e.target.textContent)}>{author}</span></Link></h3>\r\n                <h3 className=\"book-details-category\">Tags: <Link to=\"/\"><span onClick={(e) => handleChangeCategory(e)}>{category}</span></Link></h3>\r\n                <p className=\"book-details-price\">Price: <span>${price}</span></p>\r\n                <p className=\"book-details-description\">{readMore ? description : `${description.substring(0, 400)}...`}\r\n                <button className=\"read-more-btn\" onClick={() => setReadMore(!readMore)}>{readMore ? \"read less\" : \"read more\"}</button></p>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n    \r\n}\r\nexport default BookDetails","import React from 'react'\nimport './App.css'\nimport BooksContainer from './components/BooksContainer'\nimport Navbar from './components/Navbar'\nimport Cart from './components/Cart'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport BookDetails from './components/BookDetails'\n\nfunction App() {\n  return <div className=\"App\">\n    <Router>\n      <Navbar />\n      <Cart />\n      <Switch>\n        <Route path=\"/\" exact component={BooksContainer} />\n        <Route component={BookDetails} />\n      </Switch>\n    </Router>\n  </div>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}