[{"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\index.js":"1","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\reportWebVitals.js":"2","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\App.js":"3","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Books.js":"4","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Book.js":"5","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\context.js":"6","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\BooksContainer.js":"7","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Navbar.js":"8","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Sidebar.js":"9","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Cart.js":"10","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\CartItem.js":"11","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\BookDetails.js":"12"},{"size":580,"mtime":1611573059552,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":578,"mtime":1612085139288,"results":"16","hashOfConfig":"14"},{"size":2148,"mtime":1612003736569,"results":"17","hashOfConfig":"14"},{"size":948,"mtime":1612085188209,"results":"18","hashOfConfig":"14"},{"size":4256,"mtime":1612040995273,"results":"19","hashOfConfig":"14"},{"size":1260,"mtime":1612036838790,"results":"20","hashOfConfig":"14"},{"size":1620,"mtime":1612084453496,"results":"21","hashOfConfig":"14"},{"size":1000,"mtime":1612040782448,"results":"22","hashOfConfig":"14"},{"size":1087,"mtime":1611662070054,"results":"23","hashOfConfig":"14"},{"size":1085,"mtime":1611659882011,"results":"24","hashOfConfig":"14"},{"size":2305,"mtime":1612085145200,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fsmzwc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\index.js",[],["55","56"],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\reportWebVitals.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\App.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Books.js",["57"],"import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport Book from './Book'\r\nconst Books = ({books, loading}) => {\r\n    const { categoryFilters, searchValue } = useGlobalContext()\r\n    // Check if, after loading is done, fetched data returned an array\r\n    if (!loading && Array.isArray(books.booksList)) {\r\n        return (\r\n            <div className=\"book-list\">\r\n                {\r\n                    books.booksList.map((book) => {\r\n                        // If user does not enter search value\r\n                        if (searchValue === \"\") {\r\n                            if (categoryFilters === null) {\r\n                                return <Book key={book.id}  {...book} />\r\n                            }\r\n                            else if (book.category === categoryFilters) {\r\n                                return <Book key={book.id}  {...book} />\r\n                            }\r\n                        } else {\r\n                            // If user enters some search value, but does not select category\r\n                            if (categoryFilters === null) {\r\n                                if ((book.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                                book.author.toLowerCase().includes(searchValue.toLowerCase()))) {\r\n                                    return <Book key={book.id}  {...book} />\r\n                                }\r\n                            } else {\r\n                                // If user enters search value AND selects category\r\n                                if ((book.title.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                                book.author.toLowerCase().includes(searchValue.toLowerCase())) && book.category === categoryFilters) {\r\n                                    return <Book key={book.id}  {...book} />\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    return <h1 className=\"no-books-notification\">No books available.</h1>\r\n  \r\n}\r\n\r\nexport default Books;\r\n","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Book.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\context.js",["58","59","60","61","62"],"import React, { useState, useContext, useEffect } from 'react'\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children}) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [books, setBooks] = useState({})\r\n    const [cartItems, setCartItems] = useState([])\r\n    const [isCartOpen, setIsCartOpen] = useState(false)\r\n    const [total, setTotal] = useState(0)\r\n    const [amount, setAmount] = useState(0)\r\n    const [categoryFilters, setCategoryFilters] = useState(null)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [bookId, setBookId] = useState(null)\r\n\r\n    const handleToggleCart = () => {\r\n        setIsCartOpen(!isCartOpen)\r\n    }\r\n\r\n    const handleSearchValue = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n\r\n    const handleChangeCategory = (e) => {\r\n        if (e.target.textContent === \"All Categories\") {\r\n            setCategoryFilters(null)\r\n        } else {\r\n            setCategoryFilters(e.target.textContent)\r\n        }\r\n    }\r\n\r\n    const handleAddItemToCart = (id) => {\r\n        let newCartItemTitle, newCartItemPrice\r\n        books.booksList.map((book) => {\r\n            if (book.id === id) {\r\n                newCartItemTitle = book.title\r\n                newCartItemPrice = book.price\r\n            }\r\n        })\r\n        // Check if item is already in the cart\r\n        let isSameItem = false\r\n        cartItems.map((item) => {\r\n            if (item.cartItemTitle === newCartItemTitle) {\r\n                alert(\"Item is already in the cart!\")\r\n                isSameItem = true\r\n            }\r\n        })\r\n        if (isSameItem) {\r\n            return\r\n        }\r\n        const newCartItem = {\r\n            cartItemTitle: newCartItemTitle,\r\n            cartItemPrice: newCartItemPrice,\r\n            cartItemAmount: 1\r\n        }\r\n        setCartItems([...cartItems, newCartItem])\r\n    }\r\n\r\n    const handleRemoveCartItem = (id) => {\r\n        setCartItems(cartItems.filter((item) => cartItems.indexOf(item) !== id))\r\n    }\r\n\r\n    const increaseAmount = (id) => {\r\n        for (let i = 0; i < cartItems.length; i++) {\r\n            if (i === id) {\r\n                let newCartItemAmount = cartItems[i].cartItemAmount + 1\r\n                let updatedCartItem = {...cartItems[i], cartItemAmount: newCartItemAmount}\r\n                let newCartItems = cartItems\r\n                newCartItems[i] = updatedCartItem\r\n                setCartItems([...newCartItems])\r\n            }\r\n        }\r\n    }\r\n    const decreaseAmount = (id) => {\r\n        for (let i = 0; i < cartItems.length; i++) {\r\n            if (i === id) {\r\n                let newCartItemAmount = cartItems[i].cartItemAmount - 1\r\n                // Prevent amounts less than 1\r\n                if (newCartItemAmount < 1) {\r\n                    newCartItemAmount = 1\r\n                } \r\n                let updatedCartItem = {...cartItems[i], cartItemAmount: newCartItemAmount}\r\n                let newCartItems = cartItems\r\n                newCartItems[i] = updatedCartItem\r\n                setCartItems([...newCartItems])\r\n            }\r\n        }\r\n    }\r\n\r\n    const getTotalAmount = () => {\r\n        let updatedAmount = 0\r\n        cartItems.map((item) => {\r\n            updatedAmount += item.cartItemAmount\r\n        })\r\n        setAmount(updatedAmount)\r\n    }\r\n\r\n    const getTotal = () => {\r\n        let newTotal = 0\r\n        cartItems.map((item) => {\r\n            newTotal += item.cartItemPrice.replace('$', '') * item.cartItemAmount\r\n        })\r\n        setTotal(newTotal.toFixed(2))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTotalAmount()\r\n        getTotal()\r\n    }, [cartItems])\r\n\r\n    const handleConfirmOrder = () => {\r\n        alert(`Your order of $${total} is confirmed`)\r\n        setCartItems([])\r\n    }\r\n\r\n    return <AppContext.Provider value={{loading, setLoading, books, setBooks, categoryFilters, handleChangeCategory, handleAddItemToCart, cartItems, handleToggleCart, isCartOpen, handleRemoveCartItem, amount, total, increaseAmount, decreaseAmount, handleConfirmOrder, searchValue, setSearchValue, handleSearchValue, bookId, setBookId}}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\BooksContainer.js",["63"],"import React, { useEffect } from 'react'\r\nimport Books from './Books'\r\nimport Sidebar from './Sidebar'\r\nimport { useGlobalContext } from '../context';\r\n\r\nconst BooksContainer = () => {\r\n    const { loading, setLoading, books, setBooks } = useGlobalContext()\r\n    \r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n    \r\n        try {\r\n          const response = await fetch('database.json'\r\n          ,{\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n          })\r\n          const fetchedBooks = await response.json()\r\n          setLoading(false)\r\n          setBooks(fetchedBooks)\r\n        } catch (error) {\r\n          setLoading(false);\r\n          console.log(error);\r\n        }\r\n      }\r\n    \r\n      useEffect(() => {\r\n        fetchData();\r\n      }, []);\r\n    \r\n      if (loading) {\r\n        return (\r\n          <div className=\"books-container\">Loading...</div>\r\n        )\r\n      }\r\n      return (\r\n        <main>\r\n          <Sidebar />\r\n          <div className=\"books-container\">\r\n            <h1>E-books</h1>\r\n          <Books books={books} loading={loading} />\r\n        </div>\r\n        </main>\r\n        \r\n      )\r\n}\r\nexport default BooksContainer\r\n","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Navbar.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Sidebar.js",["64"],"import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst Sidebar = () => {\r\n    const { books, handleChangeCategory, categoryFilters } = useGlobalContext()\r\n    let categories = []\r\n    if (Array.isArray(books.booksList)) {\r\n        books.booksList.map((book) => {\r\n            categories.push(book.category)\r\n        })\r\n    }\r\n    let uniqueCategories = [...new Set(categories)]\r\n\r\n    return (\r\n        <aside className=\"sidebar\">\r\n            <ul className=\"categories-list\">\r\n                <li className=\"category-item\" onClick={(e) => handleChangeCategory(e)}>All Categories</li>\r\n                {\r\n                    uniqueCategories.sort().map((category, i) => {\r\n                        return <li key={i} className={`category-item ${categoryFilters === category && `category-item-active`}`} onClick={(e) => handleChangeCategory(e)}>{category}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </aside>\r\n    )\r\n}\r\nexport default Sidebar","C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\Cart.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\CartItem.js",[],"C:\\Users\\Stefan\\Desktop\\Projects\\1. Frontend\\5. React Projects\\21. Book Store\\project\\src\\components\\BookDetails.js",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":48,"nodeType":"72","messageId":"73","endLine":11,"endColumn":50},{"ruleId":"70","severity":1,"message":"74","line":34,"column":36,"nodeType":"72","messageId":"75","endLine":34,"endColumn":38},{"ruleId":"70","severity":1,"message":"74","line":42,"column":30,"nodeType":"72","messageId":"75","endLine":42,"endColumn":32},{"ruleId":"70","severity":1,"message":"74","line":92,"column":30,"nodeType":"72","messageId":"75","endLine":92,"endColumn":32},{"ruleId":"70","severity":1,"message":"74","line":100,"column":30,"nodeType":"72","messageId":"75","endLine":100,"endColumn":32},{"ruleId":"76","severity":1,"message":"77","line":109,"column":8,"nodeType":"78","endLine":109,"endColumn":19,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":31,"column":10,"nodeType":"78","endLine":31,"endColumn":12,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"74","line":8,"column":36,"nodeType":"72","messageId":"75","endLine":8,"endColumn":38},{"ruleId":"76","severity":1,"message":"82","line":19,"column":8,"nodeType":"78","endLine":19,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTotal' and 'getTotalAmount'. Either include them or remove the dependency array.","ArrayExpression",["86"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'fetchBook'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [cartItems, getTotal, getTotalAmount]",{"range":"95","text":"96"},"Update the dependencies array to be: [fetchData]",{"range":"97","text":"98"},"Update the dependencies array to be: [fetchBook]",{"range":"99","text":"100"},[3620,3631],"[cartItems, getTotal, getTotalAmount]",[858,860],"[fetchData]",[753,755],"[fetchBook]"]